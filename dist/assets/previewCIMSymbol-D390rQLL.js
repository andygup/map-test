import{dq as w,e8 as b,ei as F,e7 as v,ee as $,ej as G}from"./index-CC72Q5ax.js";import{e as g}from"./CIMSymbolHelper-BHsr-sHr.js";import{CIMSymbolRasterizer as O}from"./CIMSymbolRasterizer-Cg5BFgJF.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-BFYXB_Sy.js";import"./OptimizedGeometry-C9mSZhHi.js";import"./GeometryUtils-CwcTiJRQ.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BgWEC7oM.js";import"./CIMResourceManager-FjJp9TY6.js";const h=new O(null),u=w(b.size),S=w(b.maxSize),C=w(b.lineWidth),R=1;async function V(a,e,r){const i=e==null?void 0:e.size;let t=i!=null&&typeof i=="object"&&"width"in i?i.width:i,n=i!=null&&typeof i=="object"&&"height"in i?i.height:i;if(t==null||n==null)if(r==="esriGeometryPolygon")t=u,n=u;else{const l=await q(a,e,r);l&&(t=l.width,n=l.height),r==="esriGeometryPolyline"&&(t=C),t=t!=null&&isFinite(t)?Math.min(t,S):u,n=n!=null&&isFinite(n)?Math.max(Math.min(n,S),R):u}return e.style==="legend"&&r==="esriGeometryPolyline"&&(t=C),{width:t,height:n}}async function q(a,e,r){const{feature:i,fieldMap:t,viewParams:n}=e.cimOptions||e,l=await G.resolveSymbolOverrides(a.data,i,null,t,r,null,n);if(!l)return null;(a=a.clone()).data={type:"CIMSymbolReference",symbol:l},a.data.primitiveOverrides=void 0;const o=[];return g.fetchResources(l,h.resourceManager,o),g.fetchFonts(l,h.resourceManager,o),o.length>0&&await Promise.all(o),g.getEnvelope(l,null,h.resourceManager)}async function K(a,e={}){var M;const{node:r,opacity:i,symbolConfig:t}=e,n=t!=null&&typeof t=="object"&&"isSquareFill"in t&&t.isSquareFill,l=e.cimOptions||e,o=l.geometryType||F((M=a==null?void 0:a.data)==null?void 0:M.symbol),y=await V(a,e,o),{feature:P,fieldMap:I}=l,L=n||o!=="esriGeometryPolygon"?"preview":"legend",p=await h.rasterizeCIMSymbolAsync(a,P,y,L,I,o,null,l.viewParams,l.allowScalingUp);if(!p)return null;const{width:j,height:x}=p,c=document.createElement("canvas");c.width=j,c.height=x,c.getContext("2d").putImageData(p,0,0);const f=v(y.width),d=v(y.height),s=new Image(f,d);s.src=c.toDataURL(),s.ariaLabel=e.ariaLabel??null,s.alt=e.ariaLabel??"",i!=null&&(s.style.opacity=`${i}`);let m=s;if(e.effectView!=null){const z={shape:{type:"image",x:0,y:0,width:f,height:d,src:s.src},fill:null,stroke:null,offset:[0,0]};m=$([[z]],[f,d],{effectView:e.effectView,ariaLabel:e.ariaLabel})}return r&&m&&r.appendChild(m),m}export{K as previewCIMSymbol};
