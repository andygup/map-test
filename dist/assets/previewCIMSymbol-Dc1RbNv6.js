import{cW as w,eH as b,eR as R,dZ as v,eN as j,eS as G}from"./index-DzfnmjFP.js";import{e as g}from"./CIMSymbolHelper-BlkJnGRk.js";import{CIMSymbolRasterizer as O}from"./CIMSymbolRasterizer-B-D_P6qM.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-DR71ILWr.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./GeometryUtils-BbVMeHFF.js";import"./definitions-Y_v3njP4.js";import"./Rect-CUzevAry.js";import"./BoundingBox--kOpsguo.js";import"./CIMResourceManager-CQeFex7R.js";import"./imageUtils-DNhsxVwM.js";const p=new O(null),u=w(b.size),S=w(b.maxSize),C=w(b.lineWidth),V=1;async function $(a,e,o){const i=e==null?void 0:e.size;let t=i!=null&&typeof i=="object"&&"width"in i?i.width:i,n=i!=null&&typeof i=="object"&&"height"in i?i.height:i;if(t==null||n==null)if(o==="esriGeometryPolygon")t=u,n=u;else{const l=await q(a,e,o);l&&(t=l.width,n=l.height),o==="esriGeometryPolyline"&&(t=C),t=t!=null&&isFinite(t)?Math.min(t,S):u,n=n!=null&&isFinite(n)?Math.max(Math.min(n,S),V):u}return e.style==="legend"&&o==="esriGeometryPolyline"&&(t=C),{width:t,height:n}}async function q(a,e,o){const{feature:i,fieldMap:t,viewParams:n}=e.cimOptions||e,l=await G.resolveSymbolOverrides(a.data,i,null,t,o,null,n);if(!l)return null;(a=a.clone()).data={type:"CIMSymbolReference",symbol:l},a.data.primitiveOverrides=void 0;const r=[];return g.fetchResources(l,p.resourceManager,r),g.fetchFonts(l,p.resourceManager,r),r.length>0&&await Promise.all(r),g.getEnvelope(l,null,p.resourceManager)}async function K(a,e={}){var M;const{node:o,opacity:i,symbolConfig:t}=e,n=t!=null&&typeof t=="object"&&"isSquareFill"in t&&t.isSquareFill,l=e.cimOptions||e,r=l.geometryType||R((M=a==null?void 0:a.data)==null?void 0:M.symbol),y=await $(a,e,r),{feature:P,fieldMap:I}=l,L=n||r!=="esriGeometryPolygon"?"preview":"legend",h=await p.rasterizeCIMSymbolAsync(a,P,y,L,I,r,null,l.viewParams,l.allowScalingUp);if(!h)return null;const{width:x,height:z}=h,m=document.createElement("canvas");m.width=x,m.height=z,m.getContext("2d").putImageData(h,0,0);const f=v(y.width),d=v(y.height),s=new Image(f,d);s.src=m.toDataURL(),s.ariaLabel=e.ariaLabel??null,s.alt=e.ariaLabel??"",i!=null&&(s.style.opacity=`${i}`);let c=s;if(e.effectView!=null){const F={shape:{type:"image",x:0,y:0,width:f,height:d,src:s.src},fill:null,stroke:null,offset:[0,0]};c=j([[F]],[f,d],{effectView:e.effectView,ariaLabel:e.ariaLabel})}return o&&c&&o.appendChild(c),c}export{K as previewCIMSymbol};
