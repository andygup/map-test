import{i as k}from"./CIMResourceManager-De5Cy2vj.js";import{e as _,a as E,K as F}from"./CIMSymbolHelper-BvTJZJyB.js";import{eR as P,eS as G}from"./index-C5AN6gIb.js";import"./fontUtils-CwPg7HxN.js";import"./imageUtils-Cp-OddyP.js";import"./BidiEngine-BwB1Df7c.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./GeometryUtils-DhrvD4RL.js";import"./definitions-Y_v3njP4.js";import"./Rect-CUzevAry.js";import"./BoundingBox-DtHb85M2.js";const q=96/72;class N{constructor(g){this._spatialReference=g,this._imageDataCanvas=null,this._cimResourceManager=new k}get _canvas(){return this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas")),this._imageDataCanvas}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(g,d,p,f,s,i,n,o,M){if(!g)return null;const{data:c}=g;if(!c||c.type!=="CIMSymbolReference"||!c.symbol)return null;const{symbol:R}=c;i||(i=P(R));const a=await G.resolveSymbolOverrides(c,d,this._spatialReference,s,i,n,o),l=this._cimResourceManager,w=[];_.fetchResources(a,l,w),_.fetchFonts(a,l,w),w.length>0&&await Promise.all(w);const{width:t,height:r}=p,C=D(i,t,r,f),e=_.getEnvelope(a,C,l);if(!e)return null;let h=1,S=0,v=0;switch(R.type){case"CIMPointSymbol":case"CIMTextSymbol":{let m=1;e.width>t&&(m=t/e.width);let u=1;e.height>r&&(u=r/e.height),f==="preview"&&(e.width<t&&(m=t/e.width),e.height<r&&(u=r/e.height)),h=Math.min(m,u),S=e.x+e.width/2,v=e.y+e.height/2}break;case"CIMLineSymbol":{(M||e.height>r)&&(h=r/e.height),v=e.y+e.height/2;const m=e.x*h+t/2,u=(e.x+e.width)*h+t/2,{paths:b}=C;b[0][0][0]-=m/h,b[0][2][0]-=(u-t)/h}break;case"CIMPolygonSymbol":{S=e.x+e.width/2,v=e.y+e.height/2;const m=e.x*h+t/2,u=(e.x+e.width)*h+t/2,b=e.y*h+r/2,I=(e.y+e.height)*h+r/2,{rings:y}=C;m<0&&(y[0][0][0]-=m,y[0][3][0]-=m,y[0][4][0]-=m),b<0&&(y[0][0][1]+=b,y[0][1][1]+=b,y[0][4][1]+=b),u>t&&(y[0][1][0]-=u-t,y[0][2][0]-=u-t),I>r&&(y[0][2][1]+=I-r,y[0][3][1]+=I-r)}}const z={type:"cim",data:{type:"CIMSymbolReference",symbol:a}};return this.rasterize(z,t,r,S,v,h,i,1,C)}rasterize(g,d,p,f,s,i,n,o=0,M=null){const{data:c}=g;if(!c||c.type!=="CIMSymbolReference"||!c.symbol)return null;const{symbol:R}=c,a=this._canvas,l=(window.devicePixelRatio||1)*q;a.width=d*l,a.height=p*l,n||(n=P(R)),M||(M=D(n,d,p,"legend")),a.width+=2*o,a.height+=2*o;const w=a.getContext("2d",{willReadFrequently:!0}),t=F.createIdentity();return t.translate(-f,-s),t.scale(i*l,-i*l),t.translate(d*l/2+o,p*l/2+o),w.clearRect(0,0,a.width,a.height),new E(w,this._cimResourceManager,t,!0).drawSymbol(R,M),w.getImageData(0,0,a.width,a.height)}}function D(x,g,d,p){const s=-g/2+1,i=g/2-1,n=d/2-1,o=-d/2+1;switch(x){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[s,0],[0,0],[i,0]]]};default:return p==="legend"?{rings:[[[s,n],[i,0],[i,o],[s,o],[s,n]]]}:{rings:[[[s,n],[i,n],[i,o],[s,o],[s,n]]]}}}export{N as CIMSymbolRasterizer};
