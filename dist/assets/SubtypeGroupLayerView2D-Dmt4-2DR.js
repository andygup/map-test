import{aE as s,aL as n,b9 as d,ba as l,al as u}from"./index-C5AN6gIb.js";import{r as g}from"./FeatureLayerView2D-DgaKD1BR.js";import"./featureConversionUtils-C3NW8rek.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./timeSupport-eZnpTcn9.js";import"./timeUtils-DYBWcYWP.js";import"./tagSymbols-BPcGfZon.js";import"./highlightReasons-DFsDA0zc.js";import"./LayerView2D-tmdMtJYv.js";import"./Container-DoXxt5zf.js";import"./definitions-Y_v3njP4.js";import"./enums-BlUEVwJR.js";import"./Texture-CTKIRDMu.js";import"./TechniqueInstance-CSiYJXEd.js";import"./UpdateTracking2D-BLvcY7jP.js";import"./BindType-BmZEZMMh.js";import"./Util-DZ-J3OpH.js";import"./Program-DbcSl83q.js";import"./BufferObject-KHYTZLM-.js";import"./LabelMetric-G82jk8Dw.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-DtHb85M2.js";import"./TileContainer-4z5zi0ok.js";import"./WGLContainer-CF9Cdabk.js";import"./VertexArrayObject-itGszRJk.js";import"./vec4f32-CjrfB-0a.js";import"./ProgramTemplate-Dt1rsZaa.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-CzFICxQ3.js";import"./config-MDUrh2eL.js";import"./earcut-h7wdVcTx.js";import"./CircularArray-CujHzHWW.js";import"./tileUtils-B7X19rIS.js";import"./CIMSymbolHelper-BvTJZJyB.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-CwPg7HxN.js";import"./GeometryUtils-DhrvD4RL.js";import"./Rect-CUzevAry.js";import"./SDFHelper-DxEEJj2K.js";import"./floatRGBA-Ca01y9H_.js";import"./FeatureCommandQueue-BDDWB6HO.js";import"./constants-D5zmR9t2.js";import"./HighlightCounter-D8XekeoG.js";import"./popupUtils-C2S1hc7n.js";import"./LayerView-B14_-j8k.js";import"./RefreshableLayerView-jCvPH_4N.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),l)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return u("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=s([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
