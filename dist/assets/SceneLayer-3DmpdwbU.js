const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/editingSupport-CD1B-2sd.js","assets/index-DzfnmjFP.js","assets/index-NV7R-tPD.css"])))=>i.map(i=>d[i]);
import{aE as s,aF as a,aL as b,iK as V,f6 as G,lH as re,aM as N,hW as Q,fw as se,bb as q,bl as P,bn as ae,ew as k,jT as oe,aI as w,b6 as ne,fJ as le,fU as pe,D as Y,bv as de,s as u,V as ue,_ as ee,iv as ce,eW as ye,eX as he,eY as fe,eV as me,eZ as ge,f0 as we,e$ as ve,bR as be,ec as Ie,iw as Le,hV as J,lI as K,K as m,aC as Fe,dR as Se,aU as _e,lJ as $e,bf as Te,hX as Ee,g5 as z,lK as Oe,lL as je,lM as xe,lN as Ae,bm as Pe,lO as Re,fI as M,f2 as R,T as De,w as Ue,fP as W,lP as Ne,fR as qe,lQ as Ce,lR as Ve,jD as Ge,fS as Qe,hY as ke,hZ as Je,h_ as H,fy as Ke,lS as ze,i2 as Me,i0 as We,bc as He,i3 as Ze,lE as Be,i5 as Xe,fb as Ye}from"./index-DzfnmjFP.js";import{$ as et}from"./Mesh-B4hPCtrK.js";import{L as tt,C as Z}from"./SceneService-1O1z1trP.js";import{s as it}from"./associatedFeatureServiceUtils-z3zJlXN1.js";import{s as rt}from"./capabilities-CAweHQni.js";import{p as te,a as st,y as at,m as ot}from"./I3SLayerDefinitions-B5j7TAR8.js";import{b as nt}from"./fetchService-CIN0Vhlb.js";import{j as lt}from"./persistable-6pErAK4t.js";import{$ as pt}from"./I3SUtil-CDDNSZ0X.js";import{n as dt,p as ut}from"./popupUtils-C4WrTBTV.js";import"./axisAngleDegrees-DlBeYaSx.js";import"./MeshComponent-DjFsWICp.js";import"./imageUtils-DNhsxVwM.js";import"./MeshVertexAttributes-EqypI0Fd.js";import"./MeshLocalVertexSpace-DGdkvA88.js";import"./MeshTransform-CBUmpiKt.js";import"./meshVertexSpaceUtils-DeDI6owL.js";import"./triangulationUtils-D-x_1Xxe.js";import"./earcut-BXKVTzA3.js";import"./DoubleArray-vvGJsfPE.js";import"./Indices-BYieEVYU.js";import"./deduplicate-Bod-Q09b.js";import"./projection-CzRJm6AG.js";import"./BufferView-DowTxg_p.js";import"./vec3-Lc_U4bRi.js";import"./vec4-D8kcCT2e.js";import"./vertexSpaceConversion-7eses30p.js";import"./External-DTGc0jjP.js";import"./originUtils-D69mHv66.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceUtils-DPzai2Vw.js";import"./resourceUtils-BuVN-tQe.js";import"./saveAPIKeyUtils-9QgtBTqY.js";import"./saveUtils-C2UBvHh1.js";import"./resourceExtension-BcjwXFAs.js";import"./I3SBinaryReader-C2X2qtdO.js";import"./edgeUtils-BO6vj2sP.js";import"./floatRGBA-RLC-pnKC.js";import"./symbolColorUtils-BOVFIYuV.js";import"./NormalAttribute.glsl-D_IY537z.js";import"./BindType-BmZEZMMh.js";function ie({associatedLayer:e,serviceUpdateTimeStamp:t}){var d;const i=(d=e==null?void 0:e.editingInfo)==null?void 0:d.lastEditDate,r=e==null?void 0:e.serverGens,n=i!=null,l=t!=null,p=n&&l&&t.lastUpdate!==i.getTime();return n&&(p||!l&&(r==null?void 0:r.minServerGen)!==(r==null?void 0:r.serverGen))}const ct=e=>{let t=class extends e{constructor(){super(...arguments),this.serviceTimeInfo=null}get timeInfo(){var n;const i=(n=this.associatedLayer)==null?void 0:n.timeInfo;if(i==null)return null;const r=i.clone();return Q(r,this.fieldsIndex),r}set timeInfo(i){Q(i,this.fieldsIndex),this._override("timeInfo",i)}get timeExtent(){var i;return(i=this.associatedLayer)==null?void 0:i.timeExtent}set timeExtent(i){this._override("timeExtent",i)}get timeOffset(){var i;return(i=this.associatedLayer)==null?void 0:i.timeOffset}set timeOffset(i){this._override("timeOffset",i)}get datesInUnknownTimezone(){var i;return((i=this.associatedLayer)==null?void 0:i.datesInUnknownTimezone)??!1}set datesInUnknownTimezone(i){this._override("datesInUnknownTimezone",i)}async loadTimeInfoFromService(i){const{serviceTimeInfo:r}=this;if(r==null)return;const{startTimeField:n,endTimeField:l}=r;if(n==null&&l==null||ie({associatedLayer:this.associatedLayer,serviceUpdateTimeStamp:this.serviceUpdateTimeStamp}))return;const p=async c=>{var _;let f=null;try{const L=await((_=this.fetchStatistics)==null?void 0:_.call(this,c,i));f=L==null?void 0:L.stats}catch{}if(f==null)return null;const{minTimeStr:I,min:O,maxTimeStr:j,max:x}=f,S=c===n?I??O:j??x;return S!=null?new Date(S):null},[d,y]=await Promise.all([p(n),p(l)]);if(n!=null&&d==null||l!=null&&y==null)return;const h=new G({start:d,end:y});this.setAtOrigin("timeInfo",new V({endField:l,startField:n,fullTimeExtent:h}),"service")}};return s([a({type:V,json:{read:!1,write:!1}})],t.prototype,"timeInfo",null),s([a({type:G,json:{read:!1,write:!1}})],t.prototype,"timeExtent",null),s([a({type:re,json:{read:!1,write:!1}})],t.prototype,"timeOffset",null),s([a({type:Boolean,nonNullable:!0,json:{read:!1,write:!1}})],t.prototype,"datesInUnknownTimezone",null),s([a({type:F,readOnly:!0,json:{read:{source:"timeInfo"}}})],t.prototype,"serviceTimeInfo",void 0),t=s([b("esri.layers.mixins.TemporalSceneLayer")],t),t};let F=class extends N{constructor(){super(...arguments),this.endTimeField=null,this.startTimeField=null}};s([a({type:String})],F.prototype,"endTimeField",void 0),s([a({type:String})],F.prototype,"startTimeField",void 0),F=s([b("esri.layers.mixins.TemporalSceneLayer.SceneServiceTimeInfo")],F);let g=class extends N{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};s([a({type:String,json:{read:!0,write:!0}})],g.prototype,"name",void 0),s([a({type:String,json:{read:!0,write:!0}})],g.prototype,"field",void 0),s([a({type:[Number],json:{read:!0,write:!0}})],g.prototype,"currentRangeExtent",void 0),s([a({type:[Number],json:{read:!0,write:!0}})],g.prototype,"fullRangeExtent",void 0),s([a({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],g.prototype,"type",void 0),g=s([b("esri.layers.support.RangeInfo")],g);var T;let D=T=class extends se(q.ofType(P)){constructor(e){super(e)}clone(){return new T(this.items.map(e=>e.clone()))}write(e,t){return this.toJSON(t)}toJSON(e){var i;const t=(i=e==null?void 0:e.layer)==null?void 0:i.spatialReference;return t?this.toArray().map(r=>{if(!t.equals(r.spatialReference)){if(!ae(r.spatialReference,t))return e!=null&&e.messages&&e.messages.push(new k("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const l=new P;oe(r,l,t),r=l}const n=r.toJSON(e);return delete n.spatialReference,n}).filter(r=>r!=null):(e!=null&&e.messages&&e.messages.push(new k("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map(r=>r.toJSON(e)))}static fromJSON(e,t){const i=new T;return e.forEach(r=>i.add(P.fromJSON(r,t))),i}};D=T=s([b("esri.layers.support.PolygonCollection")],D);const E=D;var U;let v=U=class extends N{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new E,this._geometriesSource=null}initialize(){this.addHandles(ne(()=>this.geometries,"after-changes",()=>this.geometries=this.geometries,le))}readGeometries(e,t,i){Array.isArray(e)?this.geometries=E.fromJSON(e,i):this._geometriesSource={url:pe(e,i),context:i}}async loadGeometries(e,t){if(this._geometriesSource==null)return;const{url:i,context:r}=this._geometriesSource,n=await Y(i,{responseType:"json",signal:t==null?void 0:t.signal}),l=e.toJSON(),p=n.data.map(d=>({...d,spatialReference:l}));this.geometries=E.fromJSON(p,r),this._geometriesSource=null}clone(){const e=new U({geometries:de(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};s([a({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],v.prototype,"spatialRelationship",void 0),s([a({type:E,nonNullable:!0,json:{write:!0}}),lt({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries",contentAddressed:!0})],v.prototype,"geometries",void 0),s([w(["web-scene","portal-item"],"geometries")],v.prototype,"readGeometries",null),v=U=s([b("esri.layers.support.SceneFilter")],v);const yt=v;async function ht({fieldName:e,statisticsInfo:t,errorContext:i,fieldsIndex:r,path:n,customParameters:l,apiKey:p,signal:d}){if(t==null)throw new u(`${i}:no-cached-statistics`,"Cached statistics are not available for this layer");const y=r.get(e);if(y==null)throw new u(`${i}:field-unexisting`,`Field '${e}' does not exist on the layer`);const h=t.find(I=>I.name===y.name);if(h==null)throw new u(`${i}:no-cached-statistics`,"Cached statistics for this attribute are not available");const c=ue(n,h.href),{data:f}=await Y(c,{query:{f:"json",...l,token:p},responseType:"json",signal:d});return f}async function ft(e){const t=[];for(const i of e)i.name.toLowerCase().endsWith(".zip")?t.push(mt(i)):t.push(Promise.resolve(i));return(await Promise.all(t)).flat()}async function mt(e){const{BlobReader:t,ZipReader:i,BlobWriter:r}=await ee(()=>import("./zipjs-wrapper-DnezS2lx.js"),[]),n=[];return(await new i(new t(e)).getEntries()).forEach(p=>{var h;if(p.directory||/^__MACOS/i.test(p.filename))return;const d=new r,y=(h=p.getData)==null?void 0:h.call(p,d).then(c=>new File([c],p.filename));y&&n.push(y)}),Promise.all(n)}const gt=new Set(["3DObject","Point"]),B=Xe();let o=class extends ct(ce(tt(ye(he(fe(me(ge(we(ve(be(Ye))))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new q,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0,this.serviceItemId=void 0}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}destroy(){this._set("renderer",null)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){var r,n,l;const i=(n=(r=this.getFeatureType(t==null?void 0:t.feature))==null?void 0:r.domains)==null?void 0:n[e];return i&&i.type!=="inherited"?i:((l=this.getField(e))==null?void 0:l.domain)??null}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){var e;return((e=this.associatedLayer)==null?void 0:e.types)??[]}get typeIdField(){var e;return((e=this.associatedLayer)==null?void 0:e.typeIdField)??null}get templates(){var e;return((e=this.associatedLayer)==null?void 0:e.templates)??null}get formTemplate(){var e;return((e=this.associatedLayer)==null?void 0:e.formTemplate)??null}get fieldsIndex(){return new Ie(this.fields)}readNodePages(e,t,i){return t.layerType==="Point"&&(e=t.pointNodePages),e==null||typeof e!="object"?null:te.fromJSON(e,i)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get effectiveCapabilities(){var e;return this._capabilitiesFromAssociatedFeatureLayer((e=this.associatedLayer)==null?void 0:e.effectiveCapabilities)}get effectiveEditingEnabled(){return this.associatedLayer!=null&&Le(this.associatedLayer)}get geometryType(){return wt[this.profile]||"mesh"}set renderer(e){J(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return e!=null&&typeof e=="object"||(e={}),e.color==null&&(e.color=!1),e}get capabilities(){var e;return this._capabilitiesFromAssociatedFeatureLayer((e=this.associatedLayer)==null?void 0:e.capabilities)}_capabilitiesFromAssociatedFeatureLayer(e){var C;e=e??rt;const{query:t,queryRelated:i,editing:{supportsGlobalId:r,supportsRollbackOnFailure:n,supportsUploadWithItemId:l,supportsGeometryUpdate:p,supportsReturnServiceEditsInSourceSpatialReference:d},data:{supportsZ:y,supportsM:h,isVersioned:c,supportsAttachment:f},operations:{supportsEditing:I,supportsAdd:O,supportsUpdate:j,supportsDelete:x,supportsQuery:S,supportsQueryAttachments:_,supportsAsyncConvert3D:L}}=e,$=e.operations.supportsChangeTracking,A=!!((C=this.associatedLayer)!=null&&C.infoFor3D)&&K();return{query:t,queryRelated:i,editing:{supportsGlobalId:r,supportsReturnServiceEditsInSourceSpatialReference:d,supportsRollbackOnFailure:n,supportsGeometryUpdate:A&&p,supportsUploadWithItemId:l},data:{supportsAttachment:f,supportsZ:y,supportsM:h,isVersioned:c},operations:{supportsQuery:S,supportsQueryAttachments:_,supportsEditing:I&&$,supportsAdd:A&&O&&$,supportsDelete:A&&x&&$,supportsUpdate:j&&$,supportsAsyncConvert3D:L}}}get editingEnabled(){var e;return this._isOverridden("editingEnabled")?this._get("editingEnabled"):((e=this.associatedLayer)==null?void 0:e.editingEnabled)??!1}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){var e;return((e=this.associatedLayer)==null?void 0:e.infoFor3D)??null}get relationships(){var e;return(e=this.associatedLayer)==null?void 0:e.relationships}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some(i=>(i.type==="esriFieldTypeOID"&&(e=i.name),!!e)),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some(i=>(i.type==="esriFieldTypeGlobalID"&&(e=i.name),!!e)),e||void 0}get displayField(){var e;return((e=this.associatedLayer)==null?void 0:e.displayField)??null}readProfile(e,t){const i=t.store.profile;return i!=null&&X[i]?X[i]:(m.getLogger(this).error("Unknown or missing profile",{profile:i,layer:this}),"mesh-pyramids")}get useViewTime(){var e;return((e=this.associatedLayer)==null?void 0:e.useViewTime)??!0}set useViewTime(e){this._override("useViewTime",e)}load(e){return this.addResolvingPromise(this._load(e)),Promise.resolve(this)}async _load(e){const t=e!=null?e.signal:null;await this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(Fe),await this._fetchService(t),await Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),this._loadFilterGeometries()]),this._validateElevationInfo(),this._applyAssociatedLayerOverrides(),this._populateFieldUsageInfo(),await this.loadTimeInfoFromService(e),await Se(this,{origin:"service"},t),J(this.renderer,this.fieldsIndex),await this.finishLoadEditablePortalLayer(e)}async beforeSave(){this.filter!=null&&(this.filter=this.filter.clone(),await this.load())}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(e){m.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null}}createQuery(){var t;const e=new _e;return this.geometryType==="mesh"?(t=this.associatedLayer)!=null&&t.infoFor3D&&(e.returnGeometry=!0):(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then(i=>i.queryExtent(e||this.createQuery(),t))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then(i=>i.queryFeatureCount(e||this.createQuery(),t))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then(i=>i.queryFeatures(e||this.createQuery(),t)).then(i=>{if(i!=null&&i.features)for(const r of i.features)r.layer=this,r.sourceLayer=this;return i})}async queryRelatedFeatures(e,t){if(await this.load(),!this.associatedLayer)throw new u("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeatures(e,t)}async queryRelatedFeaturesCount(e,t){if(await this.load(),!this.associatedLayer)throw new u("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeaturesCount(e,t)}async queryCachedAttributes(e,t){var r;const i=$e(this.fieldsIndex,await dt(this,ut(this)));return pt(((r=this.parsedUrl)==null?void 0:r.path)??"",this.attributeStorageInfo??[],e,t,i,this.apiKey,this.customParameters)}async queryCachedFeature(e,t){const i=await this.queryCachedAttributes(e,[t]);if(!i||i.length===0)throw new u("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const r=new Te;return r.attributes=i[0],r.layer=this,r.sourceLayer=this,r}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then(i=>i.queryObjectIds(e||this.createQuery(),t))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then(i=>i.queryAttachments(e,t))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(m.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return Ee(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e!=null&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new u("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new u("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return this.statisticsInfo!=null&&this.statisticsInfo.some(t=>t.name===e)}async queryCachedStatistics(e,t){return await this.load(t),await this.fetchStatistics(e,t)}async saveAs(e,t){return this._debouncedSaveOperations(Z.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(Z.SAVE,e)}async applyEdits(e,t){const{applyEdits:i}=await ee(()=>import("./editingSupport-CD1B-2sd.js"),__vite__mapDeps([0,1,2]));let r=t;await this.load();const n=this.associatedLayer;if(!n)throw new u(`${this.type}-layer:not-editable`,"Service is not editable");await n.load();const{globalIdField:l}=n,p=!!n.infoFor3D,d=(r==null?void 0:r.globalIdUsed)??!0;if(p&&l==null)throw new u(`${this.type}-layer:not-editable`,"Valid globalIdField expected on editable SceneLayer");if(p&&!d)throw new u(`${this.type}-layer:globalid-required`,"globalIdUsed must not be false for SceneLayer editing as globalIds are required.");return z(n.url)&&p&&e.deleteFeatures!=null&&l!=null&&(r={...r,globalIdToObjectId:await Oe(n,e.deleteFeatures,l)}),i(this,n.source,e,r)}async uploadAssets(e,t){if(await this.load(),this.associatedLayer==null)throw new u(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,t)}on(e,t){return super.on(e,t)}async convertMesh(e,t){const i=c=>{throw m.getLogger(this).error(".convertMesh()",c.message),c};await this.load(),this.infoFor3D||i(new u("invalid:layer","SceneLayer has no capability for mesh conversion"));const r=await this.extractAndFilterFiles(e),n=r.reduce((c,f)=>je(this.infoFor3D,f)?c+1:c,0);n===0&&i(new xe),n>1&&i(new Ae);const l=this.spatialReference,p=(t==null?void 0:t.location)??new Pe({x:0,y:0,z:0,spatialReference:l}),d=p.spatialReference.isGeographic?"local":"georeferenced",y=et.createWithExternalSource(p,r,{vertexSpace:d}),[h]=await this.uploadAssets([y],t);return h}async extractAndFilterFiles(e){await this.load();const t=this.infoFor3D;return t?(await ft(e)).filter(i=>Re(t,i)):e}validateLayer(e){if(e.layerType&&!gt.has(e.layerType))throw new u("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new u("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new u("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function t(i,r){let n=!1,l=!1;if(i==null)n=!0,l=!0;else{const p=r&&r.isGeographic;switch(i){case"east-north-up":case"earth-centered":n=!0,l=p;break;case"vertex-reference-frame":n=!0,l=!p;break;default:n=!1}}if(!n)throw new u("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!l)throw new u("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}t(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if(this.profile==="points")e.push("Point");else{if(this.profile!=="mesh-pyramids")throw new u("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){var e,t,i;if(this._fieldUsageInfo={},this.fields)for(const r of this.fields){const n=!!((e=this.attributeStorageInfo)!=null&&e.some(d=>d.name===r.name)),l=!!((i=(t=this.associatedLayer)==null?void 0:t.fields)!=null&&i.some(d=>d&&r.name===d.name)),p={supportsLabelingInfo:n,supportsRenderer:n,supportsPopupTemplate:n||l,supportsLayerQuery:l};this._fieldUsageInfo[r.name]=p}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides(),this._applyAssociatedLayerExtentOverride(),this._applyAssociatedLayerPrivileges()}_applyAssociatedLayerFieldsOverrides(){var t;if(!((t=this.associatedLayer)!=null&&t.fields))return;let e=null;for(const i of this.associatedLayer.fields){const r=this.getField(i.name);r?(!r.domain&&i.domain&&(r.domain=i.domain.clone()),r.editable=i.editable,r.nullable=i.nullable,r.length=i.length):(e||(e=this.fields?this.fields.slice():[]),e.push(i.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled"],t=M(this);for(let i=0;i<e.length;i++){const r=e[i],n=this.originIdOf(r),l=this.associatedLayer.originIdOf(r);n<l&&(l===R.SERVICE||l===R.PORTAL_ITEM)&&t.setAtOrigin(r,this.associatedLayer[r],l)}}_applyAssociatedLayerExtentOverride(){var t,i,r;const e=(t=this.associatedLayer)==null?void 0:t.getAtOrigin("fullExtent","service");K()&&((i=this.associatedLayer)==null?void 0:i.infoFor3D)!=null&&e&&z((r=this.associatedLayer)==null?void 0:r.url)&&ie(this)&&M(this).setAtOrigin("fullExtent",e.clone(),R.SERVICE)}_applyAssociatedLayerPrivileges(){const e=this.associatedLayer;e&&(this._set("userHasEditingPrivileges",e.userHasEditingPrivileges),this._set("userHasFullEditingPrivileges",e.userHasFullEditingPrivileges),this._set("userHasUpdateItemPrivileges",e.userHasUpdateItemPrivileges))}async _setAssociatedFeatureLayer(e){if(["mesh-pyramids","points"].includes(this.profile))try{const{serverUrl:t,layerId:i,portalItem:r}=await it(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:e}),n=await nt.FeatureLayer();this.associatedLayer=new n({url:t,customParameters:this.customParameters,layerId:i,portalItem:r}),await this.associatedLayer.load()}catch(t){De(t)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){await Ue(()=>this.popupEnabled&&this.popupTemplate!=null);const e=`this SceneLayer: ${this.title}`;this.attributeStorageInfo==null?m.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):m.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}_validateElevationInfo(){const e=this.elevationInfo;this.profile==="mesh-pyramids"&&W(m.getLogger(this),Ne("Mesh scene layers","relative-to-scene",e)),W(m.getLogger(this),qe("Scene layers",e))}async fetchStatistics(e,t){var i;return await ht({fieldName:e,statisticsInfo:this.statisticsInfo,errorContext:"scenelayer",fieldsIndex:this.fieldsIndex,path:((i=this.parsedUrl)==null?void 0:i.path)??"",customParameters:this.customParameters,apiKey:this.apiKey,signal:t==null?void 0:t.signal})}};s([a({types:{key:"type",base:Ce,typeMap:{selection:Ve}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],o.prototype,"featureReduction",void 0),s([a({type:[g],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],o.prototype,"rangeInfos",void 0),s([a({json:{read:!1}})],o.prototype,"associatedLayer",void 0),s([a({type:["show","hide"]})],o.prototype,"listMode",void 0),s([a({type:["ArcGISSceneServiceLayer"]})],o.prototype,"operationalLayerType",void 0),s([a({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0),s([a({...B.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"fields",void 0),s([a()],o.prototype,"types",null),s([a()],o.prototype,"typeIdField",null),s([a()],o.prototype,"templates",null),s([a()],o.prototype,"formTemplate",null),s([a({readOnly:!0,clonable:!1})],o.prototype,"fieldsIndex",null),s([a({type:Ge,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],o.prototype,"floorInfo",void 0),s([a(B.outFields)],o.prototype,"outFields",void 0),s([a({type:te,readOnly:!0,json:{read:!1}})],o.prototype,"nodePages",void 0),s([w("service","nodePages",["nodePages","pointNodePages"])],o.prototype,"readNodePages",null),s([a({type:[st],readOnly:!0})],o.prototype,"materialDefinitions",void 0),s([a({type:[at],readOnly:!0})],o.prototype,"textureSetDefinitions",void 0),s([a({type:[ot],readOnly:!0})],o.prototype,"geometryDefinitions",void 0),s([a({readOnly:!0})],o.prototype,"serviceUpdateTimeStamp",void 0),s([a({readOnly:!0})],o.prototype,"attributeStorageInfo",void 0),s([a({readOnly:!0})],o.prototype,"statisticsInfo",void 0),s([a({type:q.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],o.prototype,"excludeObjectIds",void 0),s([a({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],o.prototype,"definitionExpression",void 0),s([a({type:yt,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],o.prototype,"filter",void 0),s([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),s([a(Qe)],o.prototype,"elevationInfo",null),s([a({readOnly:!0,json:{read:!1}})],o.prototype,"effectiveCapabilities",null),s([a({readOnly:!0})],o.prototype,"effectiveEditingEnabled",null),s([a({type:String})],o.prototype,"geometryType",null),s([a(ke)],o.prototype,"labelsVisible",void 0),s([a({type:[Je],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:H},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:H},write:!0}})],o.prototype,"labelingInfo",void 0),s([a(Ke)],o.prototype,"legendEnabled",void 0),s([a({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){var r,n;if(typeof e=="number"&&e>=0&&e<=1)return e;const i=(n=(r=t.layerDefinition)==null?void 0:r.drawingInfo)==null?void 0:n.transparency;return i!==void 0?ze(i):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],o.prototype,"opacity",void 0),s([a({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"priority",void 0),s([a({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"semantic",void 0),s([a({types:Me,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],o.prototype,"renderer",null),s([a({json:{read:!1}})],o.prototype,"cachedDrawingInfo",void 0),s([w("service","cachedDrawingInfo")],o.prototype,"readCachedDrawingInfo",null),s([a({readOnly:!0,json:{read:!1}})],o.prototype,"capabilities",null),s([a({type:Boolean,json:{read:!1}})],o.prototype,"editingEnabled",null),s([a({readOnly:!0,json:{write:!1,read:!1}})],o.prototype,"infoFor3D",null),s([a({readOnly:!0,json:{write:!1,read:!1}})],o.prototype,"relationships",null),s([a(We)],o.prototype,"popupEnabled",void 0),s([a({type:He,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0),s([a({readOnly:!0,json:{read:!1}})],o.prototype,"defaultPopupTemplate",null),s([a({type:String,json:{read:!1}})],o.prototype,"objectIdField",void 0),s([w("service","objectIdField",["objectIdField","fields"])],o.prototype,"readObjectIdField",null),s([a({type:String,json:{read:!1}})],o.prototype,"globalIdField",void 0),s([w("service","globalIdField",["globalIdField","fields"])],o.prototype,"readGlobalIdField",null),s([a({readOnly:!0,type:String,json:{read:!1}})],o.prototype,"displayField",null),s([a({type:String,json:{read:!1}})],o.prototype,"profile",void 0),s([w("service","profile",["store.profile"])],o.prototype,"readProfile",null),s([a({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],o.prototype,"normalReferenceFrame",void 0),s([a(Ze)],o.prototype,"screenSizePerspectiveEnabled",void 0),s([a({json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"serviceItemId",void 0),s([a(Be)],o.prototype,"useViewTime",null),o=s([b("esri.layers.SceneLayer")],o);const X={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},wt={"mesh-pyramids":"mesh",points:"point"},ni=o;export{ni as default};
