import{aE as i,aF as a,bl as _,aJ as I,aL as u,aM as O,bn as L,ew as x,jT as N,bv as R,fw as M,bb as J,I as j,D as A,eW as V,eX as D,eY as P,eV as U,eZ as E,f0 as K,e$ as $,b6 as C,fJ as z,fU as F,aC as G,s as c,fP as S,fQ as Z,K as w,fR as k,aI as q,fS as H,fb as Q}from"./index-DzfnmjFP.js";import{j as f}from"./persistable-6pErAK4t.js";import{L as W,C as T}from"./SceneService-1O1z1trP.js";import{p as X,a as Y,y as B,m as ee}from"./I3SLayerDefinitions-B5j7TAR8.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-BcjwXFAs.js";import"./originUtils-D69mHv66.js";import"./resourceUtils-DPzai2Vw.js";import"./resourceUtils-BuVN-tQe.js";import"./saveAPIKeyUtils-9QgtBTqY.js";import"./saveUtils-C2UBvHh1.js";var h;let n=h=class extends O{constructor(e){super(e),this.geometry=null,this.type="clip"}writeGeometry(e,t,o,s){var l;if((l=s.layer)!=null&&l.spatialReference&&!s.layer.spatialReference.equals(this.geometry.spatialReference)){if(!L(e.spatialReference,s.layer.spatialReference))return void((s==null?void 0:s.messages)&&s.messages.push(new x("scenemodification:unsupported","Scene modifications with incompatible spatial references are not supported",{modification:this,spatialReference:s.layer.spatialReference,context:s})));const y=new _;N(e,y,s.layer.spatialReference),t[o]=y.toJSON(s)}else t[o]=e.toJSON(s);delete t[o].spatialReference}clone(){return new h({geometry:R(this.geometry),type:this.type})}};i([a({type:_}),f()],n.prototype,"geometry",void 0),i([I(["web-scene","portal-item"],"geometry")],n.prototype,"writeGeometry",null),i([a({type:["clip","mask","replace"],nonNullable:!0}),f()],n.prototype,"type",void 0),n=h=i([u("esri.layers.support.SceneModification")],n);const m=n;var p;let d=p=class extends M(J.ofType(m)){constructor(e){super(e),this.url=null}clone(){return new p({url:this.url,items:this.items.map(e=>e.clone())})}toJSON(e){return this.toArray().map(t=>t.toJSON(e)).filter(t=>!!t.geometry)}static fromJSON(e,t){const o=new p;for(const s of e)o.add(m.fromJSON(s,t));return o}static async fromUrl(e,t,o){const s={url:j(e),origin:"service"},l=await A(e,{responseType:"json",signal:o==null?void 0:o.signal}),y=t.toJSON(),g=[];for(const v of l.data)g.push(m.fromJSON({...v,geometry:{...v.geometry,spatialReference:y}},s));return new p({url:e,items:g})}};i([a({type:String})],d.prototype,"url",void 0),d=p=i([u("esri.layers.support.SceneModifications")],d);const b=d;let r=class extends W(V(D(P(U(E(K($(Q)))))))){constructor(...e){super(...e),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.path=null}initialize(){this.addHandles(C(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,z))}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}readModifications(e,t,o){this._modificationsSource={url:F(e,o),context:o}}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const t=e==null?void 0:e.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(o){G(o)}if(await this._fetchService(t),this._modificationsSource!=null){const o=await b.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",o,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,t)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(e,t){return this._debouncedSaveOperations(T.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(T.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new c("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new c("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new c("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(){const e=this.elevationInfo,t="Integrated mesh layers";S(w.getLogger(this),Z(t,"absolute-height",e)),S(w.getLogger(this),k(t,e))}};i([a({type:String,readOnly:!0})],r.prototype,"geometryType",void 0),i([a({type:["show","hide"]})],r.prototype,"listMode",void 0),i([a({type:["IntegratedMeshLayer"]})],r.prototype,"operationalLayerType",void 0),i([a({json:{read:!1},readOnly:!0})],r.prototype,"type",void 0),i([a({type:X,readOnly:!0})],r.prototype,"nodePages",void 0),i([a({type:[Y],readOnly:!0})],r.prototype,"materialDefinitions",void 0),i([a({type:[B],readOnly:!0})],r.prototype,"textureSetDefinitions",void 0),i([a({type:[ee],readOnly:!0})],r.prototype,"geometryDefinitions",void 0),i([a({readOnly:!0})],r.prototype,"serviceUpdateTimeStamp",void 0),i([a({type:b}),f({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],r.prototype,"modifications",void 0),i([q(["web-scene","portal-item"],"modifications")],r.prototype,"readModifications",null),i([a(H)],r.prototype,"elevationInfo",null),i([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],r.prototype,"path",void 0),r=i([u("esri.layers.IntegratedMeshLayer")],r);const ce=r;export{ce as default};
