import{X as a,Y as h,a3 as E,co as M,s as f,M as F,bc as S,ak as C,cv as R,a6 as q}from"./index-C-FXvluM.js";import{a as $}from"./BitmapContainer-Bjcy8-ag.js";import{j as U}from"./LayerView2D-CACwUEON.js";import{_ as V}from"./ExportStrategy-BKbv8AIL.js";import{y as L}from"./LayerView-BoJFcTuW.js";import{i as W}from"./RefreshableLayerView-BcyJYs-0.js";import{a as A}from"./ExportWMSImageParameters--eNWhhX5.js";import{i as H}from"./timeSupport-BV7VRAJn.js";import"./WGLContainer-DdfRQITb.js";import"./LabelMetric-DcZDHLPh.js";import"./Program-nKTILKyt.js";import"./BufferObject-DuXoHzsa.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CIf8VSjb.js";import"./VertexArrayObject-DcaNvwOy.js";import"./ProgramTemplate-Dj-c0Ukb.js";import"./vec3f32-nZdmKIgz.js";import"./Container-xUFVjfQc.js";import"./StyleDefinition-DY46tDlF.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-COeKMnVA.js";import"./OptimizedFeature-swgcyHeh.js";import"./OptimizedGeometry-C9mSZhHi.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./Bitmap-CQF2m3r0.js";import"./timeUtils-C35TngI1.js";import"./tagSymbols-BPcGfZon.js";const _=r=>{let t=class extends r{initialize(){this.exportImageParameters=new A({layer:this.layer})}destroy(){this.exportImageParameters=M(this.exportImageParameters)}get exportImageVersion(){var e;return(e=this.exportImageParameters)==null||e.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}get timeExtent(){var e;return H(this.layer,(e=this.view)==null?void 0:e.timeExtent,this._get("timeExtent"))}async fetchPopupFeaturesAtLocation(e,o){const{layer:s}=this;if(!e)throw new f("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:s});const{popupEnabled:c}=s;if(!c)throw new f("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:c});const i=this.createFetchPopupFeaturesQuery(e);if(!i)return[];const{extent:p,width:n,height:m,x:d,y}=i;if(!(p&&n&&m))throw new f("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:p,width:n,height:m});const g=await s.fetchFeatureInfo(p,n,m,d,y);return F(o),g}};return a([h()],t.prototype,"exportImageParameters",void 0),a([h({readOnly:!0})],t.prototype,"exportImageVersion",null),a([h()],t.prototype,"layer",void 0),a([h({readOnly:!0})],t.prototype,"timeExtent",null),t=a([E("esri.views.layers.WMSLayerView")],t),t};let u=class extends _(W(U(L))){constructor(){super(...arguments),this.bitmapContainer=new $}supportsSpatialReference(r){return this.layer.serviceSupportsSpatialReference(r)}update(r){this.strategy.update(r).catch(t=>{S(t)||C.getLogger(this).error(t)})}attach(){const{layer:r}=this,{imageMaxHeight:t,imageMaxWidth:e}=r;this.bitmapContainer=new $,this.container.addChild(this.bitmapContainer),this.strategy=new V({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:t,imageMaxWidth:e,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(R(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=M(this.strategy),this.container.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(r){const{view:t,bitmapContainer:e}=this,{x:o,y:s}=r,{spatialReference:c}=t;let i,p=0,n=0;if(e.children.some(g=>{const{width:w,height:v,resolution:b,x:l,y:x}=g,I=l+b*w,P=x-b*v;return o>=l&&o<=I&&s<=x&&s>=P&&(i=new q({xmin:l,ymin:P,xmax:I,ymax:x,spatialReference:c}),p=w,n=v,!0)}),!i)return null;const m=i.width/p,d=Math.round((o-i.xmin)/m),y=Math.round((i.ymax-s)/m);return{extent:i,width:p,height:n,x:d,y}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(r,t,e,o){return this.layer.fetchImageBitmap(r,t,e,{timeExtent:this.timeExtent,...o})}};a([h()],u.prototype,"strategy",void 0),a([h()],u.prototype,"updating",void 0),u=a([E("esri.views.2d.layers.WMSLayerView2D")],u);const dt=u;export{dt as default};
