import{V as y,U as m,M as l,f_ as J,jL as V,aU as N,jM as W,bM as G,jN as Q,jO as X,jP as K,jQ as Y,g0 as Z,jR as x,jS as ee,jT as se,y as ae,h6 as te,jU as ne,jV as oe,a$ as re,j as ie,g_ as ce,jW as le,jX as ue,ak as pe}from"./index-C-FXvluM.js";import{m as fe,b as me,a as E,i as R,N as de}from"./External-CNHlILjO.js";import{i as w,h as ge,e as b,m as ye,a as we}from"./progressUtils-DP8A_uOL.js";import{i as he,n as je}from"./meshFeatureAttributes-BACqgRA3.js";import"./MeshTransform-DerVYA28.js";import"./axisAngleDegrees-B_k9QdRo.js";const D=1e6,v=20*D,Pe=2e9,Te=3;async function be({data:s,name:a,description:e},t,n){let r=null;try{const o=y(t,"uploads"),i=y(o,"info"),{data:u}=await m(i,{query:{f:"json"},responseType:"json"});l(n);const d=J(t),g=u.maxUploadFileSize*D,p=d?Pe:g,c=d?Math.min(v,g):v;if(s.size>p)throw new Error("Data too large");const C=y(o,"register"),{data:A}=await m(C,{query:{f:"json",itemName:Ae(a),description:e},responseType:"json",method:"post"});if(l(n),!A.success)throw new Error("Registration failed");const{itemID:M}=A.item;r=y(o,M);const z=y(r,"uploadPart"),F=Math.ceil(s.size/c),h=new Array;for(let f=0;f<F;++f)h.push(s.slice(f*c,Math.min((f+1)*c,s.size)));const j=h.slice().reverse(),S=new Array,B=w(F,n==null?void 0:n.onProgress,"uploadItem"),L=async()=>{for(;j.length!==0;){const f=h.length-j.length,P=j.pop(),T=new FormData,$=B.simulate(f,ge(P.size));try{T.append("f","json"),T.append("file",P),T.append("partId",`${f}`);const{data:H}=await m(z,{timeout:0,body:T,responseType:"json",method:"post"});if(l(n),!H.success)throw new Error("Part upload failed")}finally{$.remove()}}};for(let f=0;f<Te&&j.length!==0;++f)S.push(L());await Promise.all(S);const _=y(r,"commit"),{data:U}=await m(_,{query:{f:"json",parts:h.map((f,P)=>P).join(",")},responseType:"json",method:"post"});if(l(n),!U.success)throw new Error("Commit failed");return U.item}catch(o){if(r!=null){const i=y(r,"delete");await m(i,{query:{f:"json"},responseType:"json",method:"post"})}throw o}}function Ae(s){return s.replaceAll("/","_").replaceAll("\\","_")}async function Ke(s,a,e){var r;const t=s.length;if(!t)return(r=e==null?void 0:e.onProgress)==null||r.call(e,1),[];const n=w(t,e==null?void 0:e.onProgress,"uploadAssets");return Promise.all(s.map((o,i)=>Fe(o,a,{...e,onProgress:n.makeOnProgress(i)})))}async function Fe(s,{layer:a,ongoingUploads:e},t){var o;const n=e.get(s);if(n)return n;if(!_e(a))throw new V;if(Se(s,a))return(o=t==null?void 0:t.onProgress)==null||o.call(t,1),s;const r=Ue(s,a,t);e.set(s,r);try{await r}finally{e.delete(s)}return s}function Se(s,a){const{parsedUrl:e}=a;return e!=null&&s.metadata.externalSources.some(t=>fe(t,e))}async function Ue(s,a,e){const{metadata:t}=s,{displaySource:n}=t,r=I(n==null?void 0:n.source,a,{checkForConversionRequired:N("enable-feature:georeferenced-uploads")}),o=r!=null?ve(r,a,e):t.externalSources.length>0?Ne(s,a,e):xe(s,a,e),i=await o;return l(e),s.addExternalSources([i]),s}async function ve(s,a,e){return{source:await O(s,a,e),original:!0}}async function Ne(s,a,e){const t=k(a),{externalSources:n}=s.metadata,r=Re(n,a);if(!r)throw new W;const o=w(b.uploadConvertibleSource,e==null?void 0:e.onProgress,"uploadConvertibleSource"),i=await O(r,a,{onProgress:o.makeOnProgress("uploadEditSource")});s.addExternalSources([{source:i,original:!0}]);const u=r.reduce((g,{asset:p})=>p instanceof File?g+p.size:g,0),d=o.simulate("serviceAssetsToGlb",ye(u));try{const{source:g,transform:p,origin:c}=await Me(i,a,t);return N("enable-feature:georeferenced-uploads")&&p&&(s.transform=p,c&&(s.metadata.georeferenced=!0,e!=null&&e.useAssetOrigin&&(s.vertexSpace.origin=[c.x,c.y,c.z??0],s.spatialReference=c.spatialReference))),{source:g}}finally{d.remove()}}async function xe(s,a,e){const t=w(b.uploadLocalMesh,e==null?void 0:e.onProgress,"uploadLocalMesh"),n=Ee(s,a,{...e,onProgress:t.makeOnProgress("meshToAssetBlob")});return{source:await q([n],a,{...e,onProgress:t.makeOnProgress("uploadAssetBlobs")}),extent:s.extent.clone(),original:!0}}async function Ee(s,a,e){const t=k(a),n=await s.load(e),r=await n.toBinaryGLTF({origin:n.origin,signal:e==null?void 0:e.signal,ignoreLocalTransform:!0});return l(e),{blob:new Blob([r],{type:"model/gltf-binary"}),assetName:`${G()}.glb`,assetType:t}}function Re(s,a){for(const e of s){const t=I(e.source,a);if(t)return t}return null}function I(s,{infoFor3D:a},e={}){if(!s)return null;const{supportedFormats:t,editFormats:n}=a,r=de(s),o=new Array,i=Q(a),u=X(a);let d=!1;for(const g of r){const p=De(g,t);if(!p)return null;const{assetType:c}=p;if(e.checkForConversionRequired&&(c===i||c===u))return null;n.includes(c)&&(d=!0),o.push(p)}return d?o:null}function De(s,a){const e=me(s,a);return e?{asset:s,assetType:e}:null}async function O(s,a,e){return q(s.map(t=>Ie(t,e)),a,e)}async function q(s,a,e){const t=w(b.uploadAssetBlobs,e==null?void 0:e.onProgress,"uploadAssetBlobs"),n=await qe(s,a,{...e,onProgress:t.makeOnProgress("prepareAssetItems")});l(e);const r=n.map(({item:i})=>i),{uploadResults:o}=await ke(r,a,{...e,onProgress:t.makeOnProgress("uploadAssetItems")});return l(e),s.map((i,u)=>Ce(n[u],o[u],a))}async function Ie(s,a){const{asset:e,assetType:t}=s;if(e instanceof File)return{blob:e,assetName:e.name,assetType:t};const n=await e.toBlob(a);return l(a),{blob:n,assetName:e.assetName,assetType:t}}async function Oe(s,a,e){const{blob:t,assetType:n,assetName:r}=s;let o=null;try{const i=await be({data:t,name:r},a.url,e);l(e),o={assetType:n,assetUploadId:i.itemID}}catch(i){ie(i),$e().warnOnce(`Service ${a.url} does not support the REST Uploads API.`)}if(!o){const i=await ce(t);if(l(e),!i.isBase64)throw new le;o={assetType:n,assetData:i.data}}if(!o)throw new ue;return{item:o,assetName:r}}function qe(s,a,e){const t=w(s.length,e==null?void 0:e.onProgress,"prepareAssetItems");return Promise.all(s.map(async(n,r)=>{const o=Oe(await n,a,{...e,onProgress:t.makeOnProgress(r)});return l(e),o}))}async function ke(s,a,e){const t=we(e==null?void 0:e.onProgress);try{const n=await m(y(a.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(s)},method:"post",responseType:"json"});if(l(e),n.data.uploadResults.length!==s.length)throw new K(s.length,n.data.uploadResults.length);return n.data}finally{t.remove()}}function Ce(s,a,e){const{success:t}=a;if(!t){const{error:d}=a;throw new Y(s.assetName,d)}const{assetHash:n}=a,{assetName:r,item:{assetType:o}}=s,{infoFor3D:{supportedFormats:i}}=e,u=Z(o,i);if(!u)throw new x(o);return new E(r,u,[new R(`${e.parsedUrl.path}/assets/${n}`,n)])}async function Me(s,a,e){var r;const t=s.map(({assetName:o,parts:i})=>({assetName:o,assetHash:i[0].partHash}));let n;try{const o=y(a.parsedUrl.path,"convert3D"),i=(r=a.capabilities)==null?void 0:r.operations.supportsAsyncConvert3D;n=(await(i?Le:Be)(o,{query:{f:"json",assets:JSON.stringify(t),transportType:"esriTransportTypeUrl",targetFormat:e,async:i},responseType:"json",timeout:0})).data}catch{throw new ee}return ze(n,a.infoFor3D)}function ze(s,{supportedFormats:a}){const e={source:s.assets.map(t=>{const n=se(t.contentType,a);if(!n)throw new x(n);return new E(t.assetName,t.contentType,[new R(t.assetURL,t.assetHash)])}),origin:void 0,transform:void 0};if(s.transform&&(e.transform=he(s.transform),s.spatialReference)){const t=ae.fromJSON(s.spatialReference);e.origin=je(s.transform,t)}return e}function Be(s,a){return m(s,a)}async function Le(s,a){const e=(await m(s,a)).data.statusUrl;for(;;){const t=(await m(e,{query:{f:"json"},responseType:"json"})).data;switch(t.status){case"Completed":return m(t.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(t.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await te(He)}}function _e(s){return!!s.infoFor3D&&!!s.url}function k({infoFor3D:s}){const a=ne(s);if(!a)throw new oe;return a}function $e(){return pe.getLogger("esri.layers.graphics.sources.support.uploadAssets")}const He=re(1e3);export{Ke as uploadAssets};
